{"version":3,"sources":["components/FormContacts/FormContacts.module.css","components/ListContacts/ListContacts.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Container/Container.js","components/FormContacts/FormContacts.js","components/ListContacts/ListContacts.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","Container","children","className","styles","FormContacts","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","resetForm","this","Form","Label","Input","type","pattern","title","required","onChange","placeholder","Button","Component","ListContactsItem","id","onDelete","Item","Text","Span","onClick","ListContacts","contacts","length","List","map","contact","key","Filter","App","filter","handleAddContact","uuidv4","find","toLowerCase","alert","trim","test","handleDeleteContact","changeFilter","getVisibleContacts","normalizedFilter","includes","localStorage","getItem","parsedcontacts","JSON","parse","prevProps","prevState","nextContacts","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da94ab07.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"FormContacts_Form__3GlJd\",\"Label\":\"FormContacts_Label__2B6N1\",\"Input\":\"FormContacts_Input__31RcL\",\"Button\":\"FormContacts_Button__STzyE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"ListContacts_List__1pD2y\",\"Item\":\"ListContacts_Item__337Tg\",\"Text\":\"ListContacts_Text__1zz9l\",\"Span\":\"ListContacts_Span__1oCA1\",\"Button\":\"ListContacts_Button__1eq0n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Filter_Label__3WgEc\",\"Input\":\"Filter_Input__2pY3F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__2XSPZ\"};","import PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nfunction Container({ children }) {\n    return <div className={styles.Container}>{children}</div>;\n}\n\nContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './FormContacts.module.css';\n\nclass FormContacts extends Component {\n    state = {\n        name: '',\n        number: '',\n    };\n\n    handleChange = event => {\n        const { name, value } = event.currentTarget;\n        this.setState({ [name]: value });\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n        this.props.onSubmit(this.state);\n\n        this.resetForm();\n    };\n\n    resetForm = () => this.setState({ name: '', number: '' });\n\n    render() {\n        const { name, number } = this.state;\n        return (\n            <form className={styles.Form} onSubmit={this.handleSubmit}>\n                <label className={styles.Label}>\n                    Name\n                    <input\n                        className={styles.Input}\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ]) ? [a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                        required\n                        value={name}\n                        onChange={this.handleChange}\n                        placeholder=\"Ivan Ivanov\"\n                    />\n                </label>\n                <label className={styles.Label}>\n                    Number\n                    <input\n                        className={styles.Input}\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                        required\n                        onChange={this.handleChange}\n                        value={number}\n                        placeholder=\"+38 (XXX) XXX-XX-XX\"\n                    />\n                </label>\n                <button className={styles.Button} type=\"submit\">\n                    Add contact\n                </button>\n            </form>\n        );\n    }\n}\n\nFormContacts.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n};\n\nexport default FormContacts;\n","import PropTypes from 'prop-types';\n\nimport styles from './ListContacts.module.css';\n\nconst ListContactsItem = ({ id, name, number, onDelete }) => {\n    return (\n        <li className={styles.Item}>\n            <p className={styles.Text}>\n                {name}: <span className={styles.Span}>{number}</span>\n            </p>\n            <button\n                className={styles.Button}\n                type=\"button\"\n                onClick={() => onDelete(id)}\n                title=\"Удалить\"\n            >\n                Delete\n            </button>\n        </li>\n    );\n};\n\nconst ListContacts = ({ contacts, onDelete }) => {\n    if (contacts.length === 0) return null;\n    return (\n        <ul className={styles.List}>\n            {contacts.map(contact => (\n                <ListContactsItem\n                    {...contact}\n                    onDelete={onDelete}\n                    key={contact.id}\n                />\n            ))}\n        </ul>\n    );\n};\n\nListContacts.propTypes = {\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n        }),\n    ),\n    onDelete: PropTypes.func.isRequired,\n};\n\nexport default ListContacts;\n","import PropTypes from 'prop-types';\n\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n    return (\n        <label className={styles.Label}>\n            Find contacts by name\n            <input\n                type=\"text\"\n                name=\"filter\"\n                className={styles.Input}\n                value={value}\n                onChange={onChange}\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                required\n            />\n        </label>\n    );\n};\n\nFilter.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport Container from './components/Container';\nimport ContactForm from './components/FormContacts';\nimport ContactList from './components/ListContacts';\nimport Filter from './components/Filter';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.css';\n\nclass App extends Component {\n\nstate = {\n        contacts: [],\n        filter: '',\n      };\n\ncomponentDidMount() {\n        const contacts = localStorage.getItem('contacts');\n        const parsedcontacts = JSON.parse(contacts);\n        parsedcontacts && this.setState({ contacts: parsedcontacts });\n      }\n    \ncomponentDidUpdate(prevProps, prevState) {\n        const nextContacts = this.state.contacts;\n        const prevContacts = prevState.contacts;\n    \n        if (nextContacts !== prevContacts) {\n          localStorage.setItem('contacts', JSON.stringify(nextContacts));\n        }\n      };\n    \n\nhandleAddContact = ({ name, number }) => {\n        const contact = {\n            id: uuidv4(),\n            name,\n            number,\n        };\n\n        const { contacts } = this.state;\n\n        if (\n            contacts.find(\n                contact => contact.name.toLowerCase() === name.toLowerCase(),\n            )\n        ) {\n            alert(`${name} is already in contacts.`);\n\n        } else if (contacts.find(contact => contact.number === number)) {\n            alert(`${number} is already in contacts.`);\n\n        } else if (name.trim() === '' || number.trim() === '') {\n            alert(\"Enter the contact's name and number phone!\");\n\n        } else if (!/\\d{3}[-]\\d{2}[-]\\d{2}/g.test(number)) {\n            alert('Enter the correct number phone!');\n\n        } else {\n            this.setState(({ contacts }) => ({\n                contacts: [...contacts, contact],\n            }\n          )\n        );\n      }\n    };\n\n    handleDeleteContact = id =>\n        this.setState(({ contacts }) => ({\n            contacts: contacts.filter(contact => contact.id !== id),\n          }\n         )\n        );\n\n    changeFilter = event => {\n        this.setState({ \n            filter: event.currentTarget.value });\n    };\n\n    getVisibleContacts = () => {\n        const { contacts, filter } = this.state;\n        const normalizedFilter = filter.toLowerCase();\n\n        return contacts.filter(contact =>\n                contact.name.toLowerCase().includes(normalizedFilter),\n        );\n    };\n\n    render() {\n        const {contacts, filter } = this.state;\n        const visibleContacts = this.getVisibleContacts();\n\n        return (\n            <Container>\n                <h1>Phonebook</h1>\n                <ContactForm onSubmit={this.handleAddContact} />\n                <h2>Contacts</h2>\n                {contacts.length > 1 && (<Filter \n                   value={filter} \n                   onChange={this.changeFilter} />)}\n\n               {contacts.length > 0 ? \n               (<ContactList\n                    contacts={visibleContacts}\n                    onDelete={this.handleDeleteContact}/>) \n                : (<p>\n                    Your phonebook is empty. Please add contact.\n                    </p>)}\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}